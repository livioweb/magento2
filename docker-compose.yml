version: "3"

services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: php/Dockerfile
    image: livio_rodrigues/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src/:/var/www:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./src/:/var/www:delegated

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      #- ./mysql/my.cnf:/etc/mysql/my.cnf

    environment:
      MYSQL_DATABASE: magento
      MYSQL_ROOT_PASSWORD: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  redis:
    image: redis:5.0
    container_name: redis
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:5.6
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025"
      - "8025:8025"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
